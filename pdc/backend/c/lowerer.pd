utilizar bepd/builtins
utilizar bepd/datos/caja (Caja)
utilizar bepd/x/sistemaDeArchivos/archivo (LeerArchivo)
utilizar bepd/utilidades/arreglo (Únicos)
utilizar bepd/x/enum (EnumConValores)
utilizar bepd/x/adhoc (ObjetoAdHoc)


variable Opcode
fijar Opcode a EnumConValores: {Opcode},
    {csaltar},       VERDADERO,
    {saltar},        VERDADERO,
    {enviarMensaje}, VERDADERO,
    {etiqueta},      VERDADERO,
    {variadic},      FALSO,
    {fijarLocal},    FALSO,
    {fijarLocalC},   FALSO,
    {obtenerLocal},  FALSO,
    {obtenerLocalC}, FALSO,
    {caja},          FALSO,
    {fijarCaja},     FALSO,
    {fijarCajaC},    FALSO,
    {obtenerCaja},   FALSO,
    {obtenerCajaC},  FALSO,
    {prn},           VERDADERO,
    {prnl},          FALSO,
    {assert},        FALSO,
    {devolverN},     FALSO,
    {empujarNúmero}, FALSO,
    {empujarTexto},  FALSO,
    {empujarNulo},   FALSO,
    {negar},         FALSO,
    {sonIdénticos},  FALSO,
    {obtenerObjeto}, VERDADERO,
    {capturas},      FALSO,
    {locales},       FALSO,
    {mkclz},         FALSO,
    {continuar},     FALSO

metodo Opcode#requiereContinuación
    devolver yo#valor
finmetodo


clase Etiqueta
    atributo id
    metodo estatico vacía
finclase

metodo estatico Etiqueta#vacía
    devolver yo#crear
finmetodo

metodo Etiqueta#comoTexto
    devolver {etq:~t}#formatear: yo#id
finmetodo


clase FunciónIR
    atributos id, instrucciones
finclase

metodo FunciónIR#inicializar: instrucciones
    fijar yo#instrucciones a instrucciones
finmetodo

clase ContinuaciónIR
    atributos id, instrucciones
finclase

metodo ContinuaciónIR#inicializar: instrucciones
    fijar yo#instrucciones a instrucciones
finmetodo


clase Emisor
    atributos cabecera, instrucciones
    atributos idDeContinuaciónActual
    atributos funciones, continuaciones
    atributos idDeFunción, idDeContinuación

    metodo emitir: opcode, ...args
    metodo moverAFunción
    metodo combinar: subEmisor
    metodo ajustarEtiqueta: etiqueta
finclase

metodo estatico Emisor#subEmisor: emisorPadre
    variable c
    fijar c a yo#crear
    fijar c#continuaciones a emisorPadre#continuaciones
    fijar c#idDeFunción a emisorPadre#idDeFunción
    fijar c#idDeContinuación a emisorPadre#idDeContinuación
    devolver c
finmetodo

metodo Emisor#inicializar
    fijar yo#instrucciones a Arreglo#vacio
    fijar yo#cabecera a yo#instrucciones
    fijar yo#funciones a Arreglo#vacio
    fijar yo#continuaciones a Arreglo#vacio
    fijar yo#idDeContinuaciónActual a NULO
    fijar yo#idDeFunción a Caja#crear: 0
    fijar yo#idDeContinuación a Caja#crear: 0
finmetodo

metodo Emisor#emitir: ...tupla
    necesitas tupla#longitud > 0
    variable opcode
    fijar opcode a tupla#en: 0
    si son diferentes opcode y Opcode#etiqueta
        yo#instrucciones#agregarAlFinal: tupla
    finsi
    si opcode#requiereContinuación
        variable k
        fijar k a ContinuaciónIR#crear: Arreglo#vacio
        fijar k#id a yo#idDeContinuación#valor
        fijar yo#idDeContinuaciónActual a k#id
        fijar yo#idDeContinuación#valor a yo#idDeContinuación#valor + 1
        si son iguales opcode y Opcode#etiqueta
            yo#instrucciones#agregarAlFinal: (Arreglo#crearCon: Opcode#continuar, k#id)
        finsi
        tupla#agregarAlFinal: k#id
        fijar yo#instrucciones a k#instrucciones
        yo#continuaciones#agregarAlFinal: k
    finsi
finmetodo

metodo Emisor#moverAFunción
    variable func
    fijar func a FunciónIR#crear: yo#cabecera
    fijar func#id a yo#idDeFunción#valor
    fijar yo#idDeFunción#valor a yo#idDeFunción#valor + 1
    yo#funciones#agregarAlFinal: func
    fijar yo#instrucciones a Arreglo#vacio
    fijar yo#cabecera a yo#instrucciones
    fijar yo#idDeContinuaciónActual a NULO
    devolver func
finmetodo

metodo Emisor#combinar: subEmisor
    ParaCadaElemento: subEmisor#funciones, procedimiento: func
        yo#funciones#agregarAlFinal: func
    finprocedimiento
finmetodo

metodo Emisor#ajustarEtiqueta: etiqueta
    yo#emitir: Opcode#etiqueta, etiqueta
    fijar etiqueta#id a yo#idDeContinuaciónActual
finmetodo


procedimiento EscribirEmisor: emisor
    procedimiento escribirInstrucciones: pref, instrs
        ParaCadaElemento: instrs, procedimiento: instr
            escribir pref#comoTexto
            escribir {    }
            escribir (instr#en: 0)#nombre
            ParaCadaNúmero: 1, instr#longitud, procedimiento: i
                escribir {	}
                escribir (instr#en: i)#comoTexto
            finprocedimiento
            nl
        finprocedimiento
    finprocedimiento

    Escribir: {.instrucciones}
    escribirInstrucciones: {}, emisor#cabecera
    Escribir: {.funciones}
    ParaCadaElemento: emisor#funciones, procedimiento: func
        Escribir: {  .func}, func#id
        escribirInstrucciones: {  }, func#instrucciones
    finprocedimiento
    Escribir: {.continuaciones}
    ParaCadaElemento: emisor#continuaciones, procedimiento: k
        Escribir: {  .cont}, k#id
        escribirInstrucciones: {  }, k#instrucciones
    finprocedimiento
finprocedimiento
