utilizar bepd/builtins

utilizar bepd/x/datos (TipoDeDatos)
utilizar bepd/x/utf8 (CodepointACodeunit, SubrogadoACodepoint, CodepointASubrogado, ParaCadaCodepoint, CodepointsATexto, BytesATexto)


procedimiento PruebaCodepointACodeunit
    necesitas (CodepointACodeunit: 32) = { }
    necesitas (CodepointACodeunit: 241) = {√±}
    necesitas (CodepointACodeunit: 16384) = {‰ÄÄ}
    necesitas (CodepointACodeunit: 67584) = {ê†Ä}
    Escribir: {ok 1 - PruebaCodepointACodeunit}
finprocedimiento

procedimiento PruebaSubrogados
    necesitas (SubrogadoACodepoint: 55348, 56606) = 119070
    variable par
    fijar par a CodepointASubrogado: 119070
    necesitas par#alto = 55348
    necesitas par#bajo = 56606
    Escribir: {ok 2 - PruebaSubrogados}
finprocedimiento

procedimiento PruebaIteraci√≥n
    variables iter, Iter
    fijar Iter a TipoDeDatos: {Iter}, {subtexto}, {codepoint}, {pos}
    fijar iter a Arreglo#vacio

    ParaCadaCodepoint: {h√±ê†Äh}, procedimiento: subtexto, codepoint, pos
        iter#agregarAlFinal: (Iter#crear: subtexto, codepoint, pos)
    finprocedimiento

    necesitas iter = (Arreglo#crearCon:
        (Iter#crear: {h}, 104, 0),
        (Iter#crear: {√±}, 241, 1),
        (Iter#crear: (CodepointACodeunit: 67584), 67584, 3),
        (Iter#crear: {h}, 104, 7))

    fijar iter a Arreglo#vacio
    ParaCadaCodepoint: (CodepointsATexto: 80100, 13, 128514, 10), procedimiento: subtexto, codepoint, pos
        iter#agregarAlFinal: (Iter#crear: subtexto, codepoint, pos)
    finprocedimiento

    necesitas iter = (Arreglo#crearCon:
        (Iter#crear: (CodepointACodeunit: 80100), 80100, 0),
        (Iter#crear: (CodepointACodeunit: 13), 13, 4),
        (Iter#crear: (CodepointACodeunit: 128514), 128514, 5),
        (Iter#crear: (CodepointACodeunit: 10), 10, 9))

    [ Caso inv√°lido #1: Codepoint largo "cortado" ]
    fijar iter a Arreglo#vacio
    ParaCadaCodepoint: (BytesATexto: 240, 159, 152, 104), procedimiento: subtexto, codepoint, pos
        iter#agregarAlFinal: (Iter#crear: subtexto, codepoint, pos)
    finprocedimiento

    necesitas iter = (Arreglo#crearCon:
        (Iter#crear: (BytesATexto: 240, 159, 152), 65533, 0),
        (Iter#crear: (CodepointACodeunit: 104), 104, 3))

    [ Caso inv√°lido #2: Codepoint corto "alargado" ]
    fijar iter a Arreglo#vacio
    ParaCadaCodepoint: (BytesATexto: 195, 177, 177, 177, 104), procedimiento: subtexto, codepoint, pos
        iter#agregarAlFinal: (Iter#crear: subtexto, codepoint, pos)
    finprocedimiento

    necesitas iter = (Arreglo#crearCon:
        (Iter#crear: (CodepointACodeunit: 241), 241, 0),
        (Iter#crear: (BytesATexto: 177), 65533, 2),
        (Iter#crear: (BytesATexto: 177), 65533, 3),
        (Iter#crear: (CodepointACodeunit: 104), 104, 4))

    [ Caso inv√°lido #3: Byte de continuaci√≥n sin precedente ]
    fijar iter a Arreglo#vacio
    ParaCadaCodepoint: (BytesATexto: 104, 177, 104), procedimiento: subtexto, codepoint, pos
        iter#agregarAlFinal: (Iter#crear: subtexto, codepoint, pos)
    finprocedimiento

    necesitas iter = (Arreglo#crearCon:
        (Iter#crear: (CodepointACodeunit: 104), 104, 0),
        (Iter#crear: (BytesATexto: 177), 65533, 1),
        (Iter#crear: (CodepointACodeunit: 104), 104, 2))

    [ Caso inv√°lido #4: Codepoint largo "cortado" al final ]
    fijar iter a Arreglo#vacio
    ParaCadaCodepoint: (BytesATexto: 240, 159, 152), procedimiento: subtexto, codepoint, pos
        iter#agregarAlFinal: (Iter#crear: subtexto, codepoint, pos)
    finprocedimiento

    necesitas iter = (Arreglo#crearCon:
        (Iter#crear: (BytesATexto: 240, 159, 152), 65533, 0))

    Escribir: {ok 3 - PruebaIteraci√≥n}
finprocedimiento


PruebaCodepointACodeunit
PruebaSubrogados
PruebaIteraci√≥n
